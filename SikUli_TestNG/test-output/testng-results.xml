<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="10" failed="4" total="21" passed="7">
  <reporter-output>
  </reporter-output>
  <suite name="SpotifyTests" duration-ms="135683" started-at="2016-04-29T05:28:56Z" finished-at="2016-04-29T05:31:11Z">
    <groups>
    </groups>
    <test name="Login" duration-ms="6267" started-at="2016-04-29T05:28:56Z" finished-at="2016-04-29T05:29:02Z">
      <class name="com.spotify.test.login.LoginTest">
        <test-method status="FAIL" signature="setupTest()[pri:0, instance:com.spotify.test.login.LoginTest@167fdd33]" name="setupTest" is-config="true" duration-ms="0" started-at="2016-04-29T01:28:56Z" finished-at="2016-04-29T01:28:56Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.spotify.test.login.LoginTest.setupTest(LoginTest.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:216)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:143)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method status="SKIP" signature="betweenTests()[pri:0, instance:com.spotify.test.login.LoginTest@167fdd33]" name="betweenTests" is-config="true" duration-ms="0" started-at="2016-04-29T01:29:01Z" finished-at="2016-04-29T01:29:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- betweenTests -->
        <test-method status="SKIP" signature="invalidUserTest1(java.lang.String, java.lang.String)[pri:1, instance:com.spotify.test.login.LoginTest@167fdd33]" name="invalidUserTest1" duration-ms="4" started-at="2016-04-29T01:29:01Z" data-provider="inValidCreds" finished-at="2016-04-29T01:29:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[aa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[bbb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidUserTest1 -->
        <test-method status="SKIP" signature="betweenTests()[pri:0, instance:com.spotify.test.login.LoginTest@167fdd33]" name="betweenTests" is-config="true" duration-ms="0" started-at="2016-04-29T01:29:01Z" finished-at="2016-04-29T01:29:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- betweenTests -->
        <test-method status="SKIP" signature="invalidUserTest1(java.lang.String, java.lang.String)[pri:1, instance:com.spotify.test.login.LoginTest@167fdd33]" name="invalidUserTest1" duration-ms="3" started-at="2016-04-29T01:29:01Z" data-provider="inValidCreds" finished-at="2016-04-29T01:29:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[invaliduser]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[invalidPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidUserTest1 -->
        <test-method status="SKIP" signature="betweenTests()[pri:0, instance:com.spotify.test.login.LoginTest@167fdd33]" name="betweenTests" is-config="true" duration-ms="0" started-at="2016-04-29T01:29:01Z" finished-at="2016-04-29T01:29:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- betweenTests -->
        <test-method status="SKIP" signature="invalidUserTest1(java.lang.String, java.lang.String)[pri:1, instance:com.spotify.test.login.LoginTest@167fdd33]" name="invalidUserTest1" duration-ms="7" started-at="2016-04-29T01:29:01Z" data-provider="inValidCreds" finished-at="2016-04-29T01:29:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[invaliduser3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[invalidPassword4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidUserTest1 -->
        <test-method status="SKIP" signature="betweenTests()[pri:0, instance:com.spotify.test.login.LoginTest@167fdd33]" name="betweenTests" is-config="true" duration-ms="0" started-at="2016-04-29T01:29:02Z" finished-at="2016-04-29T01:29:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- betweenTests -->
        <test-method status="SKIP" signature="validUserTestWithRememberMe(java.lang.String, java.lang.String)[pri:2, instance:com.spotify.test.login.LoginTest@167fdd33]" name="validUserTestWithRememberMe" duration-ms="1" started-at="2016-04-29T01:29:02Z" data-provider="validCreds" finished-at="2016-04-29T01:29:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[spotify_test_vaibhav]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TestPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validUserTestWithRememberMe -->
        <test-method status="SKIP" signature="betweenTests()[pri:0, instance:com.spotify.test.login.LoginTest@167fdd33]" name="betweenTests" is-config="true" duration-ms="0" started-at="2016-04-29T01:29:02Z" finished-at="2016-04-29T01:29:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- betweenTests -->
        <test-method status="SKIP" signature="checkRememberMe()[pri:3, instance:com.spotify.test.login.LoginTest@167fdd33]" name="checkRememberMe" duration-ms="1" started-at="2016-04-29T01:29:02Z" finished-at="2016-04-29T01:29:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkRememberMe -->
        <test-method status="SKIP" signature="betweenTests()[pri:0, instance:com.spotify.test.login.LoginTest@167fdd33]" name="betweenTests" is-config="true" duration-ms="0" started-at="2016-04-29T01:29:02Z" finished-at="2016-04-29T01:29:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- betweenTests -->
        <test-method status="SKIP" signature="validUserTestWithoutRememberMe(java.lang.String, java.lang.String)[pri:4, instance:com.spotify.test.login.LoginTest@167fdd33]" name="validUserTestWithoutRememberMe" duration-ms="2" started-at="2016-04-29T01:29:02Z" data-provider="validCreds" finished-at="2016-04-29T01:29:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[spotify_test_vaibhav]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TestPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validUserTestWithoutRememberMe -->
        <test-method status="SKIP" signature="betweenTests()[pri:0, instance:com.spotify.test.login.LoginTest@167fdd33]" name="betweenTests" is-config="true" duration-ms="0" started-at="2016-04-29T01:29:02Z" finished-at="2016-04-29T01:29:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- betweenTests -->
        <test-method status="SKIP" signature="checkWithoutRememberMe()[pri:5, instance:com.spotify.test.login.LoginTest@167fdd33]" name="checkWithoutRememberMe" duration-ms="2" started-at="2016-04-29T01:29:02Z" finished-at="2016-04-29T01:29:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkWithoutRememberMe -->
        <test-method status="SKIP" signature="betweenTests()[pri:0, instance:com.spotify.test.login.LoginTest@167fdd33]" name="betweenTests" is-config="true" duration-ms="0" started-at="2016-04-29T01:29:02Z" finished-at="2016-04-29T01:29:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- betweenTests -->
        <test-method status="SKIP" signature="facebookUserTest()[pri:6, instance:com.spotify.test.login.LoginTest@167fdd33]" name="facebookUserTest" duration-ms="1" started-at="2016-04-29T01:29:02Z" finished-at="2016-04-29T01:29:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- facebookUserTest -->
        <test-method status="SKIP" signature="endTasks()[pri:0, instance:com.spotify.test.login.LoginTest@167fdd33]" name="endTasks" is-config="true" duration-ms="0" started-at="2016-04-29T01:29:02Z" finished-at="2016-04-29T01:29:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTasks -->
      </class> <!-- com.spotify.test.login.LoginTest -->
    </test> <!-- Login -->
    <test name="Search" duration-ms="66607" started-at="2016-04-29T05:29:02Z" finished-at="2016-04-29T05:30:08Z">
      <class name="com.spotify.test.login.SearchTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.spotify.test.login.SearchTest@305fd85d]" name="beforeClass" is-config="true" duration-ms="14802" started-at="2016-04-29T01:29:02Z" finished-at="2016-04-29T01:29:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="FAIL" signature="searchArtistSuggestionTest(java.lang.String)[pri:1, instance:com.spotify.test.login.SearchTest@305fd85d]" name="searchArtistSuggestionTest" duration-ms="5987" started-at="2016-04-29T01:29:17Z" data-provider="searchArtist" finished-at="2016-04-29T01:29:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[coldplay]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.spotify.test.login.SearchTest.searchArtistSuggestionTest(SearchTest.java:40)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchArtistSuggestionTest -->
        <test-method status="FAIL" signature="searchArtistSearchResultsTest(java.lang.String)[pri:2, instance:com.spotify.test.login.SearchTest@305fd85d]" name="searchArtistSearchResultsTest" duration-ms="9503" started-at="2016-04-29T01:29:23Z" data-provider="searchArtist" finished-at="2016-04-29T01:29:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[coldplay]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.spotify.test.login.SearchTest.searchArtistSearchResultsTest(SearchTest.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchArtistSearchResultsTest -->
        <test-method status="FAIL" signature="searchRecentTest()[pri:3, instance:com.spotify.test.login.SearchTest@305fd85d]" name="searchRecentTest" duration-ms="6684" started-at="2016-04-29T01:29:32Z" finished-at="2016-04-29T01:29:39Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.spotify.test.login.SearchTest.searchRecentTest(SearchTest.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchRecentTest -->
        <test-method status="FAIL" signature="searchResultsWithEnterKeyTest(java.lang.String)[pri:4, instance:com.spotify.test.login.SearchTest@305fd85d]" name="searchResultsWithEnterKeyTest" duration-ms="8170" started-at="2016-04-29T01:29:39Z" data-provider="searchArtist" finished-at="2016-04-29T01:29:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[coldplay]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.spotify.test.login.SearchTest.searchResultsWithEnterKeyTest(SearchTest.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchResultsWithEnterKeyTest -->
        <test-method status="PASS" signature="invalidSearchTest(java.lang.String)[pri:5, instance:com.spotify.test.login.SearchTest@305fd85d]" name="invalidSearchTest" duration-ms="5534" started-at="2016-04-29T01:29:48Z" data-provider="invalidSearch" finished-at="2016-04-29T01:29:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@^*)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidSearchTest -->
        <test-method status="PASS" signature="searchCharTest(java.lang.String)[pri:6, instance:com.spotify.test.login.SearchTest@305fd85d]" name="searchCharTest" duration-ms="2237" started-at="2016-04-29T01:29:53Z" data-provider="invalidSearch" finished-at="2016-04-29T01:29:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@^*)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchCharTest -->
        <test-method status="PASS" signature="searchSongSuggestTest(java.lang.String)[pri:7, instance:com.spotify.test.login.SearchTest@305fd85d]" name="searchSongSuggestTest" duration-ms="2840" started-at="2016-04-29T01:29:56Z" data-provider="searchSong" finished-at="2016-04-29T01:29:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hymn]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchSongSuggestTest -->
        <test-method status="PASS" signature="searchSongTest(java.lang.String)[pri:8, instance:com.spotify.test.login.SearchTest@305fd85d]" name="searchSongTest" duration-ms="4978" started-at="2016-04-29T01:29:58Z" data-provider="searchSong" finished-at="2016-04-29T01:30:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hymn]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchSongTest -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.spotify.test.login.SearchTest@305fd85d]" name="afterClass" is-config="true" duration-ms="5087" started-at="2016-04-29T01:30:03Z" finished-at="2016-04-29T01:30:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.spotify.test.login.SearchTest -->
    </test> <!-- Search -->
    <test name="Play" duration-ms="42470" started-at="2016-04-29T05:30:09Z" finished-at="2016-04-29T05:30:51Z">
      <class name="com.spotify.test.login.PlayTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.spotify.test.login.PlayTest@2bbf4b8b]" name="beforeClass" is-config="true" duration-ms="16083" started-at="2016-04-29T01:30:09Z" finished-at="2016-04-29T01:30:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="playGeneral()[pri:1, instance:com.spotify.test.login.PlayTest@2bbf4b8b]" name="playGeneral" duration-ms="3333" started-at="2016-04-29T01:30:25Z" finished-at="2016-04-29T01:30:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- playGeneral -->
        <test-method status="PASS" signature="betweenTests()[pri:0, instance:com.spotify.test.login.PlayTest@2bbf4b8b]" name="betweenTests" is-config="true" duration-ms="1005" started-at="2016-04-29T01:30:28Z" finished-at="2016-04-29T01:30:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- betweenTests -->
        <test-method status="PASS" signature="playSong(java.lang.String)[pri:2, instance:com.spotify.test.login.PlayTest@2bbf4b8b]" name="playSong" duration-ms="10679" started-at="2016-04-29T01:30:29Z" data-provider="searchSong" finished-at="2016-04-29T01:30:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hymn]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- playSong -->
        <test-method status="PASS" signature="betweenTests()[pri:0, instance:com.spotify.test.login.PlayTest@2bbf4b8b]" name="betweenTests" is-config="true" duration-ms="1003" started-at="2016-04-29T01:30:40Z" finished-at="2016-04-29T01:30:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- betweenTests -->
        <test-method status="PASS" signature="playAlbum(java.lang.String)[pri:3, instance:com.spotify.test.login.PlayTest@2bbf4b8b]" name="playAlbum" duration-ms="5757" started-at="2016-04-29T01:30:41Z" data-provider="searchSong" finished-at="2016-04-29T01:30:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hymn]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- playAlbum -->
        <test-method status="PASS" signature="betweenTests()[pri:0, instance:com.spotify.test.login.PlayTest@2bbf4b8b]" name="betweenTests" is-config="true" duration-ms="1005" started-at="2016-04-29T01:30:47Z" finished-at="2016-04-29T01:30:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- betweenTests -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.spotify.test.login.PlayTest@2bbf4b8b]" name="afterClass" is-config="true" duration-ms="3416" started-at="2016-04-29T01:30:48Z" finished-at="2016-04-29T01:30:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.spotify.test.login.PlayTest -->
    </test> <!-- Play -->
    <test name="AddSong" duration-ms="20137" started-at="2016-04-29T05:30:51Z" finished-at="2016-04-29T05:31:11Z">
      <class name="com.spotify.test.login.AddtoMySongsTest">
        <test-method status="FAIL" signature="beforeClass()[pri:0, instance:com.spotify.test.login.AddtoMySongsTest@3043fe0e]" name="beforeClass" is-config="true" duration-ms="0" started-at="2016-04-29T01:30:51Z" finished-at="2016-04-29T01:30:51Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.spotify.test.login.AddtoMySongsTest.beforeClass(AddtoMySongsTest.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:216)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:143)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="addToMySongs(java.lang.String)[pri:1, instance:com.spotify.test.login.AddtoMySongsTest@3043fe0e]" name="addToMySongs" duration-ms="1" started-at="2016-04-29T01:31:11Z" data-provider="addSong" finished-at="2016-04-29T01:31:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Are you with me]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addToMySongs -->
        <test-method status="SKIP" signature="removeFromMySongs(java.lang.String)[pri:2, instance:com.spotify.test.login.AddtoMySongsTest@3043fe0e]" name="removeFromMySongs" duration-ms="1" started-at="2016-04-29T01:31:11Z" data-provider="addSong" finished-at="2016-04-29T01:31:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Are you with me]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeFromMySongs -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:com.spotify.test.login.AddtoMySongsTest@3043fe0e]" name="afterClass" is-config="true" duration-ms="0" started-at="2016-04-29T01:31:11Z" finished-at="2016-04-29T01:31:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.spotify.test.login.AddtoMySongsTest -->
    </test> <!-- AddSong -->
  </suite> <!-- SpotifyTests -->
</testng-results>
